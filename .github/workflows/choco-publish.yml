name: Chocolatey Package Deployment

on:
  push:
    paths:
      - "**/tools/chocolateyInstall.ps1"  # Detect changes in any software folder
    branches:
      - main  # Change if using a different branch

jobs:
  choco_package:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Chocolatey
        run: choco install chocolatey

      - name: Get Changed Package Folder
        id: changed-folder
        run: |
          git fetch --prune --unshallow
          $commitSha = git rev-parse HEAD
      
          Write-Host "Commit SHA: $commitSha"
      
          $changedFiles = git diff --name-only HEAD^ HEAD
          Write-Host "Changed files: $changedFiles"
      
          $packageFolders = $changedFiles | Where-Object { $_ -match '^[^/\\]+[/\\]tools[/\\]chocolateyInstall.ps1$' } | ForEach-Object { ($_ -split '[/\\]tools[/\\]')[0] }
      
          if (-not $packageFolders) {
              Write-Host "No changed packages detected. Exiting."
              echo "PACKAGE_FOLDER=" | Out-File -FilePath $env:GITHUB_ENV -Append
              exit 0
          }
      
          Write-Host "Detected package folders: $packageFolders"
          echo "PACKAGE_FOLDER=$($packageFolders -join ' ')" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh

      - name: Pack and Push Chocolatey Packages
        env:
          CHOCO_API_KEY: ${{ secrets.APPTOKEN }}  # Store the API key in an environment variable
        run: |
          if (-not $env:CHOCO_API_KEY) {
              Write-Host "Error: No API key found."
              exit 1
          }

          $folders = "${{ env.PACKAGE_FOLDER }}" -split ' '
          if ($folders -eq "" -or $folders.Length -eq 0) {
              Write-Host "No package folders detected. Skipping."
              exit 0
          }

          foreach ($folder in $folders) {
              $fullPath = "$env:GITHUB_WORKSPACE\$folder"
              Write-Host "Processing package in: $fullPath"

              if (!(Test-Path $fullPath)) {
                  Write-Host "Skipping $folder - Directory does not exist."
                  continue
              }

              # Find .nuspec file
              $nuspecFile = Get-ChildItem -Path $fullPath -Filter "*.nuspec" -File -ErrorAction SilentlyContinue
              if ($nuspecFile -eq $null) {
                  Write-Host "Skipping $folder - No .nuspec file found in $fullPath"
                  continue
              }

              Set-Location $fullPath
              Write-Host "Packing Chocolatey package..."
              choco pack $nuspecFile.FullName

              # Find the newly created .nupkg file
              $packageFile = Get-ChildItem -Path $fullPath -Filter "*.nupkg" -File -ErrorAction SilentlyContinue | Select-Object -ExpandProperty FullName
              if (-not $packageFile) {
                  Write-Host "Error: No .nupkg file was created."
                  exit 1
              }

              Write-Host "Pushing package: $packageFile"
              choco apikey add --source="https://nuget.pkg.github.com/vijakodi/index.json" --key="$env:CHOCO_API_KEY" --force
              choco push $packageFile --source "https://nuget.pkg.github.com/vijakodi/index.json" --api-key="$env:CHOCO_API_KEY"

              # Clean up the .nupkg file
              Remove-Item -Path $packageFile -Force
              Set-Location $env:GITHUB_WORKSPACE
          }
        shell: pwsh
